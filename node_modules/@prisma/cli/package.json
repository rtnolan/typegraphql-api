{
  "_from": "@prisma/cli@2.0.0-beta.2",
  "_id": "@prisma/cli@2.0.0-beta.2",
  "_inBundle": false,
  "_integrity": "sha512-lD0cv/YC4g4SKByxH3hvzX1oS9cjRdCDU1Sh2inATaKcTHWPlxxgXQW4yYU2FF/HSWR9KK6YMAdO3ShkOl1PEQ==",
  "_location": "/@prisma/cli",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@prisma/cli@2.0.0-beta.2",
    "name": "@prisma/cli",
    "escapedName": "@prisma%2fcli",
    "scope": "@prisma",
    "rawSpec": "2.0.0-beta.2",
    "saveSpec": null,
    "fetchSpec": "2.0.0-beta.2"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@prisma/cli/-/cli-2.0.0-beta.2.tgz",
  "_shasum": "5252cbe458fd7de479a6697ab5cffd1659a5762c",
  "_spec": "@prisma/cli@2.0.0-beta.2",
  "_where": "/Users/tomnolan/workspace/ts-aikidoapi",
  "author": {
    "name": "Tim Suchanek",
    "email": "suchanek@prisma.io"
  },
  "bin": {
    "prisma": "build/index.js",
    "prisma2": "build/index.js"
  },
  "bugs": {
    "url": "https://github.com/prisma/prisma/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "The Prisma command line interface (CLI) is the primary way to interact with your Prisma project from the command line. It can initialize new project assets, generate Prisma Client, and analyze existing database structures through introspection to automatically create your application models.",
  "devDependencies": {
    "@prisma/ci-info": "^2.1.1",
    "@prisma/client": "2.0.0-beta.2",
    "@prisma/fetch-engine": "2.0.0-beta.2",
    "@prisma/generator-helper": "2.0.0-beta.2",
    "@prisma/get-platform": "2.0.0-beta.2",
    "@prisma/introspection": "2.0.0-beta.2",
    "@prisma/migrate": "2.0.0-beta.2",
    "@prisma/sdk": "2.0.0-beta.2",
    "@prisma/studio": "0.220.0",
    "@prisma/studio-server": "0.220.0",
    "@prisma/studio-transports": "0.220.0",
    "@prisma/studio-types": "0.220.0",
    "@sentry/node": "5.12.4",
    "@types/debug": "^4.1.5",
    "@types/mocha": "^5.2.7",
    "@types/mysql2": "github:types/mysql2",
    "@types/pg": "^7.14.3",
    "@types/sqlite3": "^3.1.6",
    "@zeit/ncc": "0.21.0",
    "checkpoint-client": "^1.0.7",
    "dotenv": "^8.2.0",
    "global-dirs": "^2.0.1",
    "is-installed-globally": "^0.3.1",
    "jest": "^25.2.4",
    "log-update": "^3.4.0",
    "make-dir": "^3.0.2",
    "mariadb": "^2.3.1",
    "mocha": "6.2.2",
    "mysql2": "^2.1.0",
    "mz": "2.7.0",
    "open": "^7.0.3",
    "pg": "^7.18.2",
    "pkg": "^4.4.5",
    "pkg-up": "3.1.0",
    "resolve-pkg": "^2.0.0",
    "rimraf": "^3.0.2",
    "serialize-error": "^5.0.0",
    "snap-shot-it": "7.9.2",
    "sqlite-async": "~1.0.12",
    "sqlite3": "4.1.1",
    "strip-ansi": "^6.0.0",
    "strip-indent": "3.0.0",
    "terminal-link": "^2.1.1",
    "tmp": "^0.1.0",
    "ts-jest": "^25.2.1",
    "ts-mocha": "6.0.0",
    "typescript": "^3.8.3"
  },
  "engines": {
    "node": ">=10"
  },
  "files": [
    "build",
    "download-build",
    "runtime/*.js",
    "runtime/*.d.ts",
    "runtime/utils",
    "runtime/dist",
    "prisma-client",
    "preinstall"
  ],
  "homepage": "https://github.com/prisma/prisma#readme",
  "keywords": [
    "prisma2",
    "prisma",
    "cli",
    "database",
    "sql",
    "postgresql",
    "mysql",
    "sqlite",
    "mariadb",
    "typescript",
    "orm",
    "query-builder"
  ],
  "license": "Apache-2.0",
  "main": "build/index.js",
  "name": "@prisma/cli",
  "pkg": {
    "assets": [
      "build/**/*",
      "runtime/**/*",
      "prisma-client/**/*",
      "download-build/**/*",
      "query-engine*",
      "migration-engine*",
      "introspection-engine*"
    ]
  },
  "prisma": {
    "version": "76857c35ba1e1764dd5473656ecbbb2f739e1822"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/prisma/prisma.git"
  },
  "scripts": {
    "build": "pnpm run tsc && pnpm run ncc:preinstall && pnpm run ncc:download && rm -rf build && pnpm run ncc && sed -i.bak 's/env ts-node/env node/g' 'build/index.js' && rm -f build/index.js.bak && bash scripts/copy-runtime.sh",
    "download": "rm -f download-done && node scripts/updateTag.js && node scripts/download.js || echo \"\"",
    "install": "node download-build/index.js",
    "ncc": "ncc build dist/bin.js -o build -m",
    "ncc:download": "rm -rf download-build && ncc build scripts/download.js -o download-build --minify",
    "ncc:preinstall": "rm -rf preinstall && ncc build scripts/preinstall.js -o preinstall --minify",
    "pkg": "pkg . -o pkg-build",
    "preinstall": "node preinstall/index.js",
    "prepublishOnly": "pnpm run build",
    "test": "./fixtures/test.sh && pnpm run test-postgresql && pnpm run test-sqlite && pnpm run test-mysql && pnpm run test-mariadb",
    "test-mariadb": "mocha src/__tests__/integrate.mariadb.test.ts --require ts-mocha src/__tests__/integrate.mariadb.test.ts --timeout 10s",
    "test-mysql": "mocha src/__tests__/integrate.mysql.test.ts --require ts-mocha src/__tests__/integrate.mysql.test.ts --timeout 10s",
    "test-postgresql": "mocha src/__tests__/integrate.postgresql.test.ts --require ts-mocha src/__tests__/integrate.postgresql.test.ts --timeout 10s",
    "test-sqlite": "mocha src/__tests__/integrate.sqlite.test.ts --require ts-mocha src/__tests__/integrate.sqlite.test.ts --timeout 10s",
    "test:debug": "mocha --inspect-brk src/__tests__/integrate.* --require ts-mocha src/__tests__/integrate.* --timeout 10s",
    "test:mocha": "mocha src/__tests__/integrate.* --require ts-mocha src/__tests__/integrate.* --timeout 10s",
    "test:update-snapshots": "SNAPSHOT_UPDATE=1 ./node_modules/.bin/mocha src/__tests__/integrate.* --require ts-mocha src/__tests__/integrate.* --timeout 10s",
    "tsc": "tsc -d && cp src/capture-worker.js dist/capture-worker.js && bash scripts/copy-runtime-dist.sh"
  },
  "version": "2.0.0-beta.2"
}
