import { Check } from '../check';
declare type Subset<_T extends U, U> = U;
declare type State = Subset<Check.State, {
    cache_file: string;
}>;
export default function configure(state: State): Config;
export declare class Config {
    private readonly state;
    private readonly defaultSchema;
    static new(state: State, defaultSchema: Check.Schema): Config;
    static sync(state: State, schema?: Check.Schema): Config;
    constructor(state: State, defaultSchema: Check.Schema);
    set(update: Partial<Check.Schema>): void;
    all(): Check.Schema | undefined;
    get<K extends keyof Check.Schema>(key: K): Check.Schema[K] | undefined;
    reset(): void;
    delete(): void;
}
export {};
